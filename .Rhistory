descriptions
#Join them together based on the "rcid" and "session" columns
votes_joined <- votes_processed %>%
inner_join(descriptions)
# Filter for votes related to colonialism
votes_joined %>%
filter(co==1)
votes_joined <- votes_processed %>%
inner_join(descriptions, by = c("rcid", "session"))
View(votes_joined)
votes_joined <- votes_processed %>%
inner_join(descriptions, by = c("rcid", "session"))
votes_joined <- votes_processed %>%
inner_join(descriptions)
votes_joined %>%
filter(co==1)
View(votes_joined)
View(votes_joined)
saveRDS(votes_joined, file="votes_joined.rds")
votes_joined <- votes_processed %>%
inner_join(descriptions)
votes_joined <- votes_processed %>%
inner_join(descriptions)
library("dplyr")
library("countrycode")
library("ggplot2")
library("broom")
library("tidyr")
library("purrr")
votes_joined <- votes_processed %>%
inner_join(descriptions)
votes_processed
descriptions
votes_joined <- votes_processed %>%
inner_join(descriptions)
library("dplyr")
# Print the votes_processed dataset
votes_processed
# Print the descriptions dataset
descriptions
#Join them together based on the "rcid" and "session" columns
votes_joined <- votes_processed %>%
inner_join(descriptions)
votes_joined <- readRDS("votes_joined.rds")
votes_joined
votes_processed
# Print the descriptions dataset
descriptions
#Join them together based on the "rcid" and "session" columns
votes_joined
knitr::opts_chunk$set(echo = TRUE)
#install packages
#install.packages("dplyr")
#install.packages("countrycode")
#install.packages("ggplot2")
#install.packages("broom")
#install.packages("tidyr")
library("dplyr")
library("countrycode")
library("ggplot2")
library("broom")
library("tidyr")
library("purrr")
url <- "http://s3.amazonaws.com/assets.datacamp.com/production/course_1414/datasets/descriptions.rds"
download.file(url, "descriptions.rds")
votes <- readRDS("votes.rds")
descriptions <- readRDS("descriptions.rds")
knitr::opts_chunk$set(echo = TRUE)
#install packages
#install.packages("dplyr")
#install.packages("countrycode")
#install.packages("ggplot2")
#install.packages("broom")
#install.packages("tidyr")
library("dplyr")
library("countrycode")
library("ggplot2")
library("broom")
library("tidyr")
library("purrr")
votes <- readRDS("votes.rds")
descriptions <- readRDS("descriptions.rds")
knitr::opts_chunk$set(echo = TRUE)
#install packages
#install.packages("dplyr")
#install.packages("countrycode")
#install.packages("ggplot2")
#install.packages("broom")
#install.packages("tidyr")
library("dplyr")
library("countrycode")
library("ggplot2")
library("broom")
library("tidyr")
library("purrr")
votes <- readRDS("votes.rds")
descriptions <- readRDS("descriptions.rds")
votes_joined <- readRDS("votes_joined.rds")
# Load the dplyr package
library("dplyr")
# Print the votes dataset
votes
# Filter for votes that are "yes", "abstain", or "no"
votes %>% filter(vote <= 3)
# Add another %>% step to add a year column
votes %>%
filter(vote <= 3) %>%
mutate(year = session + 1945 )
# Load the countrycode package
library(countrycode)
# Convert country code 100
countrycode(100, "cown", "country.name")
# Add a country column within the mutate: votes_processed
votes_processed <- votes %>%
filter(vote <= 3) %>%
mutate(year = session + 1945, country = countrycode(ccode, "cown", "country.name"))
# Print votes_processed
votes_processed
# Find total and fraction of "yes" votes
votes_processed %>%
summarize(total = n(),
percent_yes = mean(vote == 1))
# Change this code to summarize by year
votes_processed %>%
group_by(year) %>%
summarize(total = n(),
percent_yes = mean(vote == 1))
# Summarize by country: by_country
by_country <- votes_processed %>%
group_by(country) %>%
summarize(total = n(),
percent_yes = mean(vote == 1))
# You have the votes summarized by country
by_country <- votes_processed %>%
group_by(country) %>%
summarize(total = n(),
percent_yes = mean(vote == 1))
# Print the by_country dataset
by_country
# Sort in ascending order of percent_yes
by_country %>%
arrange(percent_yes)
# Now sort in descending order
by_country %>%
arrange(desc(percent_yes))
# Filter out countries with fewer than 100 votes
by_country %>%
filter(total > 100) %>%
arrange(percent_yes)
# Define by_year
votes_processed
by_year <- votes_processed %>%
group_by(year) %>%
summarize(total = n(),
percent_yes = mean(vote == 1))
by_year
# Load the ggplot2 package
library("ggplot2")
# Create line plot
ggplot(by_year, aes(x = year, y = percent_yes )) +
geom_line()
# Change to scatter plot and add smoothing curve
ggplot(by_year, aes(year, percent_yes)) +
geom_point()
# Change to scatter plot and add smoothing curve
ggplot(by_year, aes(year, percent_yes)) +
geom_point() + geom_smooth()
# Group by year and country: by_year_country
by_year_country <- votes_processed %>%
group_by(year, country) %>%
summarize(total = n(),
percent_yes = mean(vote == 1))
by_year_country
# Start with by_year_country dataset
by_year_country <- votes_processed %>%
group_by(year, country) %>%
summarize(total = n(),
percent_yes = mean(vote == 1))
# Print by_year_country
by_year_country <- tbl_df(by_year_country)
# Create a filtered version: UK_by_year
UK_by_year <- by_year_country %>%
filter(country %in% c("United Kingdom of Great Britain and Northern Ireland"))
# Line plot of percent_yes over time for UK only
ggplot(UK_by_year, aes(x = year, y = percent_yes)) +
geom_line()
# Vector of four countries to examine
countries <- c("United States of America", "United Kingdom of Great Britain and Northern Ireland",
"France", "India")
# Filter by_year_country: filtered_4_countries
filtered_4_countries <- by_year_country %>%
filter(country %in% countries)
# Line plot of % yes in four countries
ggplot(filtered_4_countries, aes(x = year, y = percent_yes, color = country)) +
geom_line()
ggplot(filtered_4_countries, aes(x = year, y = percent_yes, color = country)) +
geom_point() + geom_smooth()
# Vector of six countries to examine
countries <- c("United States of America", "United Kingdom of Great Britain and Northern Ireland",
"France", "Japan", "Brazil", "India")
# Filtered by_year_country: filtered_6_countries
filtered_6_countries <- by_year_country %>%
filter(country %in% countries)
# Line plot of % yes over time faceted by country
ggplot(filtered_6_countries, aes(x = year, y = percent_yes)) +
geom_line() +
facet_wrap(~ country)
ggplot(filtered_6_countries, aes(x = year, y = percent_yes, color = country)) +
geom_point() +
geom_smooth() +
facet_wrap(~ country)
# Vector of six countries to examine
countries <- c("United States of America", "United Kingdom of Great Britain and Northern Ireland",
"France", "Japan", "Brazil", "India")
# Filtered by_year_country: filtered_6_countries
filtered_6_countries <- by_year_country %>%
filter(country %in% countries)
# Line plot of % yes over time faceted by country
ggplot(filtered_6_countries, aes(year, percent_yes)) +
geom_line() +
facet_wrap(~ country, scale = "free_y")
ggplot(filtered_6_countries, aes(x = year, y = percent_yes, color = country)) +
geom_point() +
geom_smooth() +
facet_wrap(~ country, scale = "free_y")
# Add three more countries to this list
countries <- c("United States of America", "United Kingdom of Great Britain and Northern Ireland",
"France", "Japan", "Brazil", "India", "China", "Malaysia", "Singapore")
# Filtered by_year_country: filtered_countries
filtered_countries <- by_year_country %>%
filter(country %in% countries)
# Line plot of % yes over time faceted by country
ggplot(filtered_countries, aes(year, percent_yes)) +
geom_line() +
facet_wrap(~ country, scales = "free_y")
ggplot(filtered_countries, aes(x = year, y = percent_yes, color = country)) +
geom_point() +
geom_smooth() +
facet_wrap(~ country, scale = "free_y")
# Percentage of yes votes from the US by year: US_by_year
US_by_year <- by_year_country %>%
filter(country == "United States of America")
# Print the US_by_year data
US_by_year
# Perform a linear regression of percent_yes by year: US_fit
US_fit <- lm(percent_yes ~ year, data = US_by_year)
# Perform summary() on the US_fit object
summary(US_fit)
# Load the broom package
library("broom")
# Call the tidy() function on the US_fit object
tidy(US_fit)
# Linear regression of percent_yes by year for US
US_by_year <- by_year_country %>%
filter(country == "United States of America")
US_fit <- lm(percent_yes ~ year, US_by_year)
# Fit model for the United Kingdom
UK_by_year <- by_year_country %>%
filter(country == "United Kingdom of Great Britain and Northern Ireland")
UK_fit <- lm(percent_yes ~ year, UK_by_year)
# Create US_tidied and UK_tidied
US_tidied <- tidy(US_fit)
UK_tidied <- tidy(UK_fit)
# Combine the two tidied models
bind_rows(US_tidied, UK_tidied)
# Load the tidyr package
library("tidyr")
# Nest all columns besides country
by_year_country %>%
nest(-country)
# All countries are nested besides country
nested <- by_year_country %>%
nest(-country)
# Print the nested data for Brazil
nested$data[[7]]
# All countries are nested besides country
nested <- by_year_country %>%
nest(-country)
# Unnest the data column to return it to its original form
unnest(nested)
# Load tidyr and purrr
library("tidyr")
library("purrr")
# Perform a linear regression on each item in the data column
by_year_country %>%
nest(-country) %>%
mutate(model = map(data, ~lm(percent_yes ~ year, .)))
# Load the broom package
library("broom")
# Add another mutate that applies tidy() to each model
by_year_country %>%
nest(-country) %>%
mutate(model = map(data, ~ lm(percent_yes ~ year, data = .))) %>%
mutate(tidied = map(model, tidy))
# Add one more step that unnests the tidied column
country_coefficients <- by_year_country %>%
nest(-country) %>%
mutate(model = map(data, ~ lm(percent_yes ~ year, data = .)),
tidied = map(model, tidy)) %>%
unnest(tidied)
# Print the resulting country_coefficients variable
country_coefficients
# Print the country_coefficients dataset
country_coefficients
# Filter for only the slope terms
country_coefficients %>%
filter(term == "year")
# Filter for only the slope terms
slope_terms <- country_coefficients %>%
filter(term == "year")
# Add p.adjusted column, then filter
slope_terms %>%
mutate(p.adjusted = p.adjust(p.value)) %>%
filter(p.adjusted < .05)
# Filter by adjusted p-values
filtered_countries <- country_coefficients %>%
filter(term == "year") %>%
mutate(p.adjusted = p.adjust(p.value)) %>%
filter(p.adjusted < .05)
# Sort for the countries increasing most quickly
filtered_countries %>%
arrange(desc(estimate))
# Sort for the countries decreasing most quickly
filtered_countries %>%
arrange(estimate)
# Load dplyr package
library("dplyr")
# Print the votes_processed dataset
votes_processed
# Print the descriptions dataset
descriptions
#Join them together based on the "rcid" and "session" columns
votes_joined
# Filter for votes related to colonialism
votes_joined %>%
filter(co==1)
votes_joined <- votes_processed %>%
inner_join(descriptions, by = c("rcid", "session"))
# Load the ggplot2 package
library("ggplot2")
# Filter, then summarize by year: US_co_by_year
US_co_by_year <- votes_joined %>%
filter (country == "United States", co == 1) %>%
group_by(year) %>%
summarise(percent_yes=mean(vote == 1))
# Graph the % of "yes" votes over time
ggplot(US_co_by_year, aes(x=year, y= percent_yes)) +
geom_line()
# Load the ggplot2 package
library("ggplot2")
# Filter, then summarize by year: US_co_by_year
US_co_by_year <- votes_joined %>%
filter (country == "United States of America", co == 1) %>%
group_by(year) %>%
summarise(percent_yes = mean(vote == 1))
# Graph the % of "yes" votes over time
ggplot(US_co_by_year, aes(x = year, y = percent_yes)) +
geom_line()
votes_joined
votes_joined %>%
gather(topic, value, me:ec)
votes_joined %>%
gather(topic, value, me:ec)
votes_joined %>%
gather(topic, value, me:ec) %>%
filter(value == 1, country %in% c("United States of America",
"United Kingdom of Great Britain and Northern Ireland"))
votes_joined %>%
gather(topic, value, me:ec) %>%
filter(value == 1, country %in% c("United States of America",
"United Kingdom of Great Britain and Northern Ireland")) %>%
group_by(year, country, topic) %>%
summarize(percent_yes = mean(vote == 1)) %>%
ungroup() %>%
mutate(topic = plyr::revalue(topic, translations)) %>%
ggplot(aes(year, percent_yes, color = country)) +
geom_line() +
facet_wrap(~ topic) +
ylab("% of yes votes")
translations <- c(me = "Palestinian conflict",
nu = "Nuclear weapons and nuclear material",
di = "Arms control and disarmament",
hr = "Human rights",
co = "Colonialism",
ec = "Economic development")
votes_joined %>%
gather(topic, value, me:ec) %>%
filter(value == 1, country %in% c("United States of America",
"United Kingdom of Great Britain and Northern Ireland")) %>%
group_by(year, country, topic) %>%
summarize(percent_yes = mean(vote == 1))
votes_joined %>%
gather(topic, value, me:ec) %>%
filter(value == 1, country %in% c("United States of America",
"United Kingdom of Great Britain and Northern Ireland")) %>%
group_by(year, country, topic) %>%
summarize(percent_yes = mean(vote == 1)) %>%
ungroup()
votes_joined %>%
gather(topic, value, me:ec) %>%
filter(value == 1, country %in% c("United States of America",
"United Kingdom of Great Britain and Northern Ireland")) %>%
group_by(year, country, topic) %>%
summarize(percent_yes = mean(vote == 1))
votes_joined %>%
gather(topic, value, me:ec)
votes_joined %>%
gather(topic, value, me:ec) %>%
filter(value == 1, country %in% c("United States of America",
"United Kingdom of Great Britain and Northern Ireland"))
votes_joined %>%
gather(topic, value, me:ec) %>%
filter(value == 1, country %in% c("United States of America",
"United Kingdom of Great Britain and Northern Ireland")) %>%
group_by(year, country, topic)
votes_joined %>%
gather(topic, value, me:ec) %>%
filter(value == 1, country %in% c("United States of America",
"United Kingdom of Great Britain and Northern Ireland")) %>%
group_by(year, country, topic) %>%
summarize(percent_yes = mean(vote == 1))
votes_joined %>%
gather(topic, value, me:ec) %>%
filter(value == 1, country %in% c("United States of America",
"United Kingdom of Great Britain and Northern Ireland")) %>%
group_by(year, country, topic) %>%
summarize(percent_yes = mean(vote == 1)) %>%
ungroup()
votes_joined %>%
gather(topic, value, me:ec) %>%
filter(value == 1, country %in% c("United States of America",
"United Kingdom of Great Britain and Northern Ireland")) %>%
group_by(year, country, topic) %>%
summarize(percent_yes = mean(vote == 1)) %>%
ungroup() %>%
mutate(topic = plyr::revalue(topic, translations))
translations <- c(me = "Palestinian conflict",
nu = "Nuclear weapons and nuclear material",
di = "Arms control and disarmament",
hr = "Human rights",
co = "Colonialism",
ec = "Economic development")
votes_joined %>%
gather(topic, value, me:ec) %>%
filter(value == 1, country %in% c("United States of America",
"United Kingdom of Great Britain and Northern Ireland")) %>%
group_by(year, country, topic) %>%
summarize(percent_yes = mean(vote == 1)) %>%
ungroup() %>%
mutate(topic = plyr::revalue(topic, translations)) %>%
ggplot(aes(year, percent_yes, color = country)) +
geom_line() +
facet_wrap(~ topic) +
ylab("% of yes votes")
# Load the tidyr package
library("tidyr")
# Gather the six me/nu/di/hr/co/ec columns
votes_joined %>%
gather(topic, has_topic, me:ec)
# Perform gather again, then filter
votes_gathered <- votes_joined %>%
gather(topic, has_topic, me:ec) %>%
filter(has_topic == 1)
# Load the tidyr package
library("tidyr")
# Gather the six me/nu/di/hr/co/ec columns
votes_joined %>%
gather(topic, has_topic, me:ec)
# Perform gather again, then filter
votes_gathered <- votes_joined %>%
gather(topic, has_topic, me:ec) %>%
filter(has_topic == 1)
votes_gathered
# Replace the two-letter codes in topic: votes_tidied
votes_tidied <- votes_gathered %>%
mutate(topic = recode(topic,
me = "Palestinian conflict",
nu = "Nuclear weapons and nuclear material",
di = "Arms control and disarmament",
hr = "Human rights",
co = "Colonialism",
ec = "Economic development"))
votes_tidied
votes_tidied
# Print votes_tidied
votes_tidied
# Summarize the percentage "yes" per country-year-topic
by_country_year_topic <- votes_tidied %>%
group_by(country, year, topic) %>%
summarise(total = n(),
percent_yes = mean(vote == 1)) %>%
ungroup()
# Print by_country_year_topic
by_country_year_topic
# Load the ggplot2 package
library("ggplot2")
# Filter by_country_year_topic for just the US
US_by_country_year_topic <- by_country_year_topic %>%
filter(country=="United States")
# Plot % yes over time for the US, faceting by topic
ggplot(US_by_country_year_topic, aes(x = year, y = percent_yes)) +
geom_line() +
facet_wrap(~ topic)
# Load the ggplot2 package
library("ggplot2")
# Filter by_country_year_topic for just the US
US_by_country_year_topic <- by_country_year_topic %>%
filter(country=="United States of America")
# Plot % yes over time for the US, faceting by topic
ggplot(US_by_country_year_topic, aes(x = year, y = percent_yes)) +
geom_line() +
facet_wrap(~ topic)
